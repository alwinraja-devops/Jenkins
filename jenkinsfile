pipeline {
    agent any

    environment {
        AWS_REGION = 'us-east-1'
        ECR_REPO = 'simple-node-app'
        IMAGE_TAG = 'latest'
        AWS_ACCOUNT_ID = '340752818053' // Replace with your real AWS Account ID
        ECR_URL = "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${ECR_REPO}"
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Configure AWS Credentials') {
            steps {
                withCredentials([usernamePassword(
                    credentialsId: 'aws-creds',
                    usernameVariable: 'AWS_ACCESS_KEY_ID',
                    passwordVariable: 'AWS_SECRET_ACCESS_KEY'
                )]) {
                    sh '''
                        mkdir -p ~/.aws

                        echo "[default]" > ~/.aws/credentials
                        echo "aws_access_key_id=${AWS_ACCESS_KEY_ID}" >> ~/.aws/credentials
                        echo "aws_secret_access_key=${AWS_SECRET_ACCESS_KEY}" >> ~/.aws/credentials

                        echo "[default]" > ~/.aws/config
                        echo "region=${AWS_REGION}" >> ~/.aws/config
                    '''
                }
            }
        }

        stage('Create ECR Repository if not exists') {
            steps {
                sh '''
                    if ! aws ecr describe-repositories --repository-names $ECR_REPO --region $AWS_REGION > /dev/null 2>&1; then
                        echo "Creating ECR repository: $ECR_REPO"
                        aws ecr create-repository --repository-name $ECR_REPO --region $AWS_REGION
                    else
                        echo "ECR repository $ECR_REPO already exists"
                    fi
                '''
            }
        }

        stage('Build Docker Image') {
            steps {
                sh 'docker build -t $ECR_REPO:$IMAGE_TAG .'
            }
        }

        stage('Login to ECR') {
            steps {
                sh '''
                    aws ecr get-login-password --region $AWS_REGION | \
                    docker login --username AWS --password-stdin $ECR_URL
                '''
            }
        }

        stage('Tag & Push Docker Image') {
            steps {
                sh '''
                    docker tag $ECR_REPO:$IMAGE_TAG $ECR_URL:$IMAGE_TAG
                    docker push $ECR_URL:$IMAGE_TAG
                '''
            }
        }
    }

    post {
        success {
            echo '✅ Docker image pushed to ECR successfully!'
        }
        failure {
            echo '❌ Pipeline failed.'
        }
    }
}

